name: Release to PyPI, Bandit # FOSSA Test, DockerHub, Codecov

on:
  push:
    tags:
    - 'v*'
  pull_request:
    branches:
    - main

permissions:
  contents: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    environment: release

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        poetry lock
        poetry install

    # - name: Run tests with coverage
    #   run: poetry run pytest tests/release/ --cov=jipso --cov-report=xml

    - name: Run Bandit security scan
      run: poetry run bandit -r jipso -ll || true

    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v5
    #   with:
    #     fail_ci_if_error: true
    #     token: ${{ secrets.CODECOV_TOKEN }}
    #     slug: jipso-foundation/jipso-stack

  pypi:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment: release

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Build package with Poetry
      run: |
        poetry lock
        poetry install
        poetry build

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        attestations: true
        verbose: true

  # docker:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/')
  #   environment: release

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3

  #   - name: Login to DockerHub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   - name: Build and Push Docker image
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: .
  #       push: true
  #       tags: jipsofoundation/jipso:latest
